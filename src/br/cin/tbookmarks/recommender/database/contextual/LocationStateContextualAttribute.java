package br.cin.tbookmarks.recommender.database.contextual;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;

public enum LocationStateContextualAttribute implements AbstractContextualAttribute{
	
	UNKNOWN(-1),
	AARGAU(0),ABIA(1),AHMADI(2),AICHI_KEN(3),AL_ASIMAH(4),ALABAMA(5),ALASKA(6),ALBERTA(7),
	ALEXANDRIA_GOVERNORATE(8),AMAZONAS(9),AMMAN(10),ANDALUCIA(11),ANDHRA_PRADESH(12),
	AQUITAINE(13),ARAGON(14),ARAGUA(15),ARIZONA(16),ARKANSAS(17),ATTICA(18),AUCKLAND(19),
	AUSTRALIAN_CAPITAL_TERRITORY(20),AUTONOMOUS_CITY_OF_BUENOS_AIRES(21),AUVERGNE(22),
	BADEN_WÜRTTEMBERG(23),BAGHD_D(24),BALEARIC_ISLANDS(25),BALI(26),BASEL_STADT(27),BAVARIA(28),
	BEIJING(29),BEIRUT(30),BELAIT(31),BERLIN(32),BERN(33),BIHAR(34),BOGOTA(35),BRITISH_COLUMBIA(36),
	BRITTANY(37),BUCHAREST(38),BURGUNDY(39),CAIRO_GOVERNORATE(40),CALABARZON(41),CALIFORNIA(42),
	CANTERBURY(43),CANTON_OF_NEUCHATEL(44),CAPITAL_DISTRICT(45),CAPITAL_REGION(46),
	CAPITAL_REGION_OF_DENMARK(47),CARABOBO(48),CAROLINA(49),CATALONIA(50),CATALUNYA(51),
	CENTER_DISTRICT(52),CENTRAL(53),CENTRAL_DENMARK_REGION(54),CENTRAL_GOVERNORATE(55),
	CENTRAL_LUZON(56),CHAMPAGNE_ARDENNE(57),CHAMPASAK(58),CHIANG_MAI(59),CHIAPAS(60),
	CHIBA_PREFECTURE(61),CHIHUAHUA(62),CHRIST_CHURCH(63),CHUNGCHEONGNAM_DO(64),
	CITY_OF_ZAGREB(65),COLORADO(67),
	COMMUNITY_OF_MADRID(68),CONNECTICUT(69),DAMASCUS_GOVERNORATE(70),
	DELAWARE(71),DELHI(72),DEMERARA_MAHAICA(73),DENIZLI(74),DHAKA_DIVISION(75),
	DISTRICT_OF_COLUMBIA(76),DISTRITO_FEDERAL(77),DONEGAL(78),DONETSK_OBLAST(79),DUBAI(80),
	DUBLIN(81),EAST_JAVA(82),EHIME_KEN(83),ENGLAND(84),EVORA_DISTRICT(85),FEDERAL_DISTRICT(86),
	FEDERAL_TERRITORY_OF_KUALA_LUMPUR(87),FES_BOULEMANE(88),FLANDERS(89),FLORIDA(90),
	FRANCISCO_MORAZAN(91),FUKUI_PREFECTURE(92),FUKUOKA_PREFECTURE(93),GAUTENG(94),
	GELDERLAND(95),GENEVA(96),GEORGIA(97),GISBORNE(98),GRANADA(99),GUANACASTE(100),
	GUANAJUATO(101),GUANTANAMO(102),GUATEMALA(103),GUNMA_PREFECTURE(104),GYEONGGI_DO(105),
	HARYANA(106),HAWAII(107),HESSE(108),HLAVNI_MESTO_PRAHA(109),HONG_KONG_ISLAND(110),
	HRADEC_KRALOVE_REGION(111),HUBEI(112),HUMACAO(113),HYOGO_PREFECTURE(114),IDAHO(115),
	ÎLE_DE_FRANCE(116),ILLINOIS(117),INDIANA(118),IOWA(119),ISTANBUL(120),JALISCO(121),
	JERUSALEM_DISTRICT(122),KAGAWA_PREFECTURE(123),KALININGRADSKAYA_OBLAST_(124),
	KANAGAWA_PREFECTURE(125),KANSAS(126),KAOHSIUNG_CITY(127),KARNATAKA(128),KENTUCKY(129)
	,KERALA(130),KOWLOON(131),KRUNG_THEP_MAHA_NAKHON(132),KYOTO_PREFECTURE(133),
	LANGUEDOC_ROUSSILLON(134),LAZIO(135),LESSER_POLAND_VOIVODESHIP(136),LËTZEBUERG(137),
	LIMA(138),LIMASSOL(139),LIMBURG(140),LIMERICK(141),LISBON(142),LOMBARDIA(143),
	LOMBARDY(144),LOUISIANA(145),LUXEMBOURG(146),MAHARASHTRA(147),MAINE(148),
	MAKKAH_PROVINCE(149),MANAGUA(150),MANICALAND(151),MANITOBA(152),
	MARRAKESH_TENSIFT_EL_HAOUZ(153),MARYLAND(154),MASSACHUSETTS(155),METRO_MANILA(156),
	MICHIGAN(157),MIDI_PYRENEES(158),MINAS_GERAIS(159),MINNESOTA(160),MISSISSIPPI(161),
	MISSOURI(162),MONAGHAN(163),MONTANA(164),MONTEVIDEO_DEPARTMENT(165),MOSCOW(166),
	MUSCAT_GOVERNORATE(167),NANGARHAR(168),NEBRASKA(169),NEVADA(170),NEW_BRUNSWICK(171),
	NEW_HAMPSHIRE(172),NEW_JERSEY(173),NEW_MEXICO(174),NEW_SOUTH_WALES(175),NEW_YORK(176),
	NEWFOUNDLAND_AND_LABRADOR(177),NIEDERSACHSEN(178),NINAWA(179),NOORD_HOLLAND(180),
	NORDLAND(181),NORD_PAS_DE_CALAIS(182),NORTH_BRABANT(183),NORTH_CAROLINA(184),
	NORTH_DAKOTA(185),NORTH_HOLLAND(186),NORTH_SULAWESI(187),NORTH_EAST(188),
	NORTHERN_IRELAND(189),NORTHERN_TERRITORY(190),NOVA_SCOTIA(191),NUEVO_LEON(192),
	NUNAVUT(193),ODISHA(194),OHIO(195),OITA_PREFECTURE(196),OKINAWA_PREFECTURE(197),
	OKLAHOMA(198),ONTARIO(199),OREGON(200),OROMIA(201),OSAKA_PREFECTURE(202),OSLO(203),
	OTAGO(204),OVERIJSSEL(205),PARANA(206),PAYS_DE_LA_LOIRE(207),
	PELOPONNISOS_DYTIKI_ELLADA_KE_IONIO(208),PENNSYLVANIA(209),PICARDIE(210),PONCE(211),
	PRACHUAP_KHIRI_KHAN(212),PRINCE_EDWARD_ISLAND(213),PROVENCE_ALPES_COTE_D_AZUR(214),
	PUEBLA(215),PUERTO_PLATA(216),QUEBEC(217),QUEENSLAND(218),RAJASTHAN(219),
	REGION_DE_VALPARAISO(220),REGION_DEL_BIO_BIO(221),RHINELAND_PALATINATE(222),
	RHODE_ISLAND(223),RHONE_ALPES(224),RIGAS_PILSETA(225),RIO_DE_JANEIRO(226),
	RIO_GRANDE_DO_SUL(227),ROGALAND(228),SAINT_CATHERINE_PARISH(229),SAINT_PETERSBURG(230),
	SALAH_AL_DIN(231),SAN_JOSE(232),SAN_JUAN(233),SANTIAGO_METROPOLITAN_REGION(234),
	SAO_PAULO(235),SASKATCHEWAN(236),SCOTLAND(237),SELANGOR(238),SHAANXI(239),SHANGHAI(240),
	SICILY(241),SINALOA(242),SINDH(243),SKOPJE(244),SONORA(245),SØR_TRØNDELAG(246),
	SOUTH_AUSTRALIA(247),SOUTH_CAROLINA(248),SOUTH_DAKOTA(249),SOUTH_DISTRICT(250),
	SOUTH_HOLLAND(251),SOUTH_MORAVIAN_REGION(252),SOUTHAMPTON(253),SOUTHLAND(254),ST_CROIX(255),
	ST_JOHN(256),ST_THOMAS(257),STOCKHOLM_COUNTY(258),TAICHUNG_CITY(259),TAMIL_NADU(260),
	TASMANIA(261),TBILISI(262),TEL_AVIV_DISTRICT(263),TELANGANA(264),TENNESSEE(265),
	TEXAS(266),TIERRA_DEL_FUEGO(267),TOCHIGI_PREFECTURE(268),TOKYO(269),TUSCANY(270),
	TYROL(271),UMBRIA(272),UPPSALA_COUNTY(273),UTAH(274),UTRECHT(275),UTTAR_PRADESH(276),
	UUSIMAA(277),VALAIS(278),VALLE_D_AOSTA(279),VALLE_DEL_CAUCA(280),VARAŽDIN_COUNTY(281),
	VÄSTMANLAND_COUNTY(282),VÄSTRA_GÖTALAND_COUNTY(283),VAUD(284),VERACRUZ(285),VERMONT(286),
	VESTFOLD(287),VICTORIA(288),VIENNA(289),VILNIUS_COUNTY(290),VIRGINIA(291),VOJVODINA(292),
	WAIKATO(293),WALES(294),WASHINGTON(295),WELLINGTON(296),WEST(297),WEST_BENGAL(298),
	WEST_COAST(299),WEST_VIRGINIA(300),WESTERN_AUSTRALIA(301),WESTERN_CAPE(302),
	WESTERN_PROVINCE(303),WEXFORD(304),WILAYAH_PERSEKUTUAN_KUALA_LUMPUR(305),WISCONSIN(306),
	WYOMING(307),YUCATAN(308),ZUID_HOLLAND(309),ZURICH(310),ARICA_Y_PARINACOTA_REGION(311),
	MASOVIAN_VOIVODESHIP(312),REGIAN_METROPOLITANA(313),ULAANBAATAR(314),HESSEN(315),HAWKE_S_BAY(316),
	AUST_AGDER(317),YARACUY(318),SALTA(319),AKERSHUS(320),PANAMA(321),PAKTIKA(322),CANTABRIA(323),
	HLAVNA_MASTO_PRAHA(324),VALENCIAN_COMMUNITY(325),LARA(326),GORONTALO(327),SAN_LUIS(328),
	SPECIAL_CAPITAL_REGION_OF_JAKARTA(329),MIDI_PYRANOES(330),MANAWATU_WANGANUI(331),NORTHLAND(332),
	BANSKA_BYSTRICA_REGION(333),EASTERN_PROVINCE(334),SANTIAGO(335),GIZA_GOVERNORATE(336),AREQUIPA(337),
	SANTA_CRUZ(338),NORTHEAST(339),MAYAGAEZ(341),NORTHWEST_TERRITORIES(342),VENETO(343)
	,CRETE(344),QUERETARO(346),GUJARAT(347),BRANDENBURG(348),LOWER_SAXONY(349),
	MIE_PREFECTURE(350),MPUMALANGA(351),PASTAZA(352),CARINTHIA(353),HAMILTON(354),SINT_MAARTEN(355),
	CANTON_OF_BERN(356),KACHI_PREFECTURE(357),LA_VEGA(358),TOYAMA_KEN(359),MOLISE(360),
	FRANCHE_COMTAO(361),NATIONAL_DISTRICT(362),ZEELAND(363),JAWA_TIMUR(364),MAAOPOLSKIE(365),
	NORTHERN_PROVINCE(366),TIMIE_COUNTY(367),UPRAVNA_ENOTA_AJDOVAAINA(368),ZLIN_REGION(369),
	HAIFA_DISTRICT(370),MADEIRA(371),SAINT_MICHAEL(372),HOKKAIDO_PREFECTURE(373),JIANGSU(374),
	HEDMARK(375),GYEONGSANGNAM_DO(376),ASTERGATLANDS_LEON(377),WALLOON_REGION(378),MENDOZA(379),
	NORTH_RHINE_WESTPHALIA(380),
;
	
	

	private long code;

	private LocationStateContextualAttribute(long value) {
		this.code = value;
	}

	@Override
	public long getCode() {
		return this.code;
	}

	public static LocationStateContextualAttribute getInstanceByCode(long code){
		
		for(LocationStateContextualAttribute d : LocationStateContextualAttribute.values()){
			if(d.getCode() == code){
				return d;
			}
		}
		
		return null;
	}

	public static LocationStateContextualAttribute getEnum(String name) {
		
		try{
			
			String state = name.replaceAll("\\s", "_").replaceAll("\\?", "_").replaceAll("\\-", "_").replaceAll("\\'", "_").toUpperCase();
			return valueOf(state);
		}catch(Exception e){
		
			if (name.equalsIgnoreCase("st. croix")) {
				return ST_CROIX;
			}else if (name.equalsIgnoreCase("st. john")) {
				return ST_JOHN;
			}else if (name.equalsIgnoreCase("st. thomas")) {
				return ST_THOMAS;
			}else if (name.equalsIgnoreCase("ÃŽle-de-France")) {
				return ÎLE_DE_FRANCE;
			}else if (name.equalsIgnoreCase("LÃ«tzebuerg")) {
				return LËTZEBUERG;
			}else if (name.equalsIgnoreCase("VÃ¤stra GÃ¶taland County")) {
				return VÄSTRA_GÖTALAND_COUNTY;
			}else if (name.equalsIgnoreCase("Ä°stanbul")) {
				return ISTANBUL;
			}else if (name.equalsIgnoreCase("RÄ«gas pilsÄ“ta")) {
				return RIGAS_PILSETA;
			}else if (name.equalsIgnoreCase("Hlavni mÄ›sto Praha")) {
				return HLAVNI_MESTO_PRAHA;
			}else if (name.equalsIgnoreCase("VaraÅ¾din County")) {
				return VARAŽDIN_COUNTY;
			}else if (name.equalsIgnoreCase("Baden-WÃ¼rttemberg")) {
				return BADEN_WÜRTTEMBERG;
			}else if (name.equalsIgnoreCase("BaghdÄ¿d")) {
				return BAGHD_D;
			}else if (name.equalsIgnoreCase("SÃ¸r-TrÃ¸ndelag")) {
				return SØR_TRØNDELAG;
			}else if (name.equalsIgnoreCase("VÃ¤stmanland County")) {
				return VÄSTMANLAND_COUNTY;
			}else if (name.equalsIgnoreCase("REGIÃ³N METROPOLITANA")) {
				return REGIAN_METROPOLITANA;
			}else if (name.equalsIgnoreCase("HLAVNÃ­ MÄ›STO PRAHA")) {
				return HLAVNA_MASTO_PRAHA;
			}else if (name.equalsIgnoreCase("MIDI-PYRÃ©NÃ©ES")) {
				return MIDI_PYRANOES;
			}else if (name.equalsIgnoreCase("BANSKÃ¡ BYSTRICA REGION")) {
				return BANSKA_BYSTRICA_REGION;
			}else if (name.equalsIgnoreCase("QUÃ©BEC")) {
				return QUEBEC;
			}else if (name.equalsIgnoreCase("MAYAGÃ¼EZ")) {
				return MAYAGAEZ;
			}else if (name.equalsIgnoreCase("NUEVO LEÃ³N")) {
				return NUEVO_LEON;
			}else if (name.equalsIgnoreCase("QUERÃ©TARO")) {
				return QUERETARO;
			}else if (name.equalsIgnoreCase("KÅ¿CHI PREFECTURE")) {
				return KACHI_PREFECTURE;
			}else if (name.equalsIgnoreCase("FRANCHE-COMTÃ©")) {
				return FRANCHE_COMTAO;
			}else if (name.equalsIgnoreCase("TIMIÈ™ COUNTY")) {
				return TIMIE_COUNTY;
			}else if (name.equalsIgnoreCase("UPRAVNA ENOTA AJDOVÅ¡Ä¿INA")) {
				return UPRAVNA_ENOTA_AJDOVAAINA;
			}else if (name.equalsIgnoreCase("Ã–STERGÃ¶TLANDS LÃ¤N")) {
				return ASTERGATLANDS_LEON;
			}else if (name.equalsIgnoreCase("MAÅ‚OPOLSKIE")) {
				return MAAOPOLSKIE;
			}
			else{
				if(name.length()>1){
					System.err.println(name + " unknown state");
				}
				return UNKNOWN;
			}/*else if (name.equalsIgnoreCase("south carolina")) {
				return SOUTH_CAROLINA;
			}else if (name.equalsIgnoreCase("new mexico")) {
				return NEW_MEXICO;
			}else if (name.equalsIgnoreCase("new hampshire")) {
				return NEWHAMPSHIRE;
			}else if (name.equalsIgnoreCase("district of columbia")) {
				return DISTRICT_OF_COLUMBIA;
			}else if (name.equalsIgnoreCase("rhode island")) {
				return RHODE_ISLAND;
			}else if (name.equalsIgnoreCase("west virginia")) {
				return WEST_VIRGINIA;
			}else if (name.equalsIgnoreCase("north dakota")) {
				return NORTH_DAKOTA;
			}else if (name.equalsIgnoreCase("south dakota")) {
				return SOUTH_DAKOTA;
			}else{
				//System.out.println(name + " category unknown");
				return OTHER;
			}*/
		}
	}
	
	@Override
	public List<AbstractContextualAttribute> valuesForTest() {
		
		HashSet<Long> aux = new HashSet<Long>();
		
		List<AbstractContextualAttribute> valuesForTest = new ArrayList<AbstractContextualAttribute>();
		for(LocationStateContextualAttribute attr : LocationStateContextualAttribute.values()){
			if(!attr.equals(LocationStateContextualAttribute.UNKNOWN) && !aux.contains(attr.getCode())){
				valuesForTest.add(attr);
				aux.add(attr.getCode());
			}
		}
		return valuesForTest;
	}
}
